# This workflow will test an Android project

name: Tests

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  unit_test:
    name: Run Unit Tests
    runs-on: ubuntu-latest

    steps:
    - name: Checkout latest version of repository
      uses: actions/checkout@v2
    
    - name: Cache Gradle packages
      uses: actions/cache@v2
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*') }}
        restore-keys: |
          ${{ runner.os }}-gradle-
    
    - name: Create fake secrets file
      run: cp secret.properties.example secret.properties
    
    - name: Run Unit Tests
      run: ./gradlew testDebugUnitTest

    - name: Upload Test Reports
      if: ${{ failure() }}
      uses: actions/upload-artifact@v1
      with:
        name: reports
        path: app/build/reports

  ui_test:
    name: Run UI Tests
    runs-on: macos-latest

    steps:
      - name: Checkout latest version of repository
        uses: actions/checkout@v2

      - name: Cache Gradle packages
        uses: actions/cache@v2
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Create fake secrets file
        run: cp secret.properties.example secret.properties

      - name: Run UI Tests
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: 29
          target: google_apis
          script: ./gradlew connectedDebugAndroidTest

      - name: Upload Test Reports
        if: ${{ failure() }}
        uses: actions/upload-artifact@v1
        with:
          name: reports
          path: app/build/reports
