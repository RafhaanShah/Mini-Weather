apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'
apply plugin: 'kotlinx-serialization'
apply plugin: 'com.adarshr.test-logger'

android {
    compileSdkVersion 30

    // Get API keys from 'secret.properties' file to avoid exposing in VCS
    def secretProperties = new Properties()
    secretProperties.load(project.rootProject.file('secret.properties').newDataInputStream())

    defaultConfig {
        applicationId "com.miniweather"
        minSdkVersion 26
        targetSdkVersion 30
        versionCode 1
        versionName "1.0"

        buildConfigField("String", "API_KEY", secretProperties.getProperty("API_KEY"))

        // https://developer.android.com/training/testing/junit-runner
        testInstrumentationRunner "com.miniweather.testutil.IntegrationTestRunner"
        testInstrumentationRunnerArguments clearPackageData: 'true'
    }

    buildTypes {
        debug {
            applicationIdSuffix ".debug"
            debuggable true
            minifyEnabled false
        }

        release {
            debuggable false
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    // Use view binding
    // https://developer.android.com/topic/libraries/view-binding
    buildFeatures {
        viewBinding true
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = '1.8'
    }

    // Compiler annotations for room
    // https://developer.android.com/jetpack/androidx/releases/room#compiler-options
    kapt {
        arguments {
            arg("room.schemaLocation", "$projectDir/schemas".toString())
            arg("room.incremental", "true")
            arg("room.expandProjection", "true")
        }
    }

    // Include shared folders in unit tests and android tests
    sourceSets {
        androidTest {
            java.srcDirs += "src/sharedTest/java"
        }
        test {
            java.srcDirs += "src/sharedTest/java"
        }
    }

    testOptions {
        execution 'ANDROIDX_TEST_ORCHESTRATOR'
        animationsDisabled = true
        unitTests {
            // For Robolectric
            // http://robolectric.org/getting-started/
            includeAndroidResources = true
        }
    }

    // Exclude unnecessary coroutines files in apk
    // https://github.com/Kotlin/kotlinx.coroutines/issues/2274
    packagingOptions {
        exclude "DebugProbesKt.bin"
    }

}

dependencies {
    // Kotlin
    def coroutines_version = "1.5.0"
    implementation fileTree(dir: "libs", include: ["*.jar"])
    implementation 'org.jetbrains.kotlinx:kotlinx-serialization-json:1.2.1'
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutines_version"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-play-services:$coroutines_version"

    // AndroidX, UI
    implementation 'androidx.core:core-ktx:1.5.0'
    implementation 'androidx.activity:activity-ktx:1.3.0-alpha08'
    implementation 'androidx.fragment:fragment-ktx:1.4.0-alpha01'
    implementation 'androidx.appcompat:appcompat:1.3.0'
    implementation 'androidx.cardview:cardview:1.0.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.4'

    // JetPack Navigation
    def navigation_version = "2.3.5"
    implementation "androidx.navigation:navigation-fragment-ktx:$navigation_version"
    implementation "androidx.navigation:navigation-ui-ktx:$navigation_version"

    // Dependency injection
    // https://developer.android.com/training/dependency-injection/dagger-android
    def dagger_version = "2.29.1"
    implementation "com.google.dagger:dagger:$dagger_version"
    implementation 'com.google.android.material:material:1.3.0'

    // Location services
    // https://developer.android.com/training/location/retrieve-current#setup
    implementation 'com.google.android.gms:play-services-location:18.0.0'

    // Http requests
    // https://github.com/square/retrofit
    def okhttp_version = "4.9.0"
    implementation "com.squareup.okhttp3:okhttp:$okhttp_version"
    implementation 'com.squareup.retrofit2:retrofit:2.9.0'
    implementation 'com.jakewharton.retrofit:retrofit2-kotlinx-serialization-converter:0.8.0'

    // Image loading
    // https://github.com/bumptech/glide
    def glide_version = "4.11.0"
    implementation "com.github.bumptech.glide:glide:$glide_version"

    // Room db
    // https://developer.android.com/training/data-storage/room
    def room_version = "2.3.0"
    implementation "androidx.room:room-runtime:$room_version"
    implementation "androidx.room:room-ktx:$room_version"

    // Annotation processors
    kapt "androidx.room:room-compiler:$room_version"
    kapt "com.google.dagger:dagger-compiler:$dagger_version"
    kapt "com.github.bumptech.glide:compiler:$glide_version"
    kaptTest "com.google.dagger:dagger-compiler:$dagger_version"

    // Testing
    // https://developer.android.com/training/testing
    def androidx_test_version = "1.3.0"
    def androidx_junit_version = "1.1.2"
    def espresso_version = "3.3.0"
    testImplementation 'junit:junit:4.13.1'
    testImplementation "androidx.test:core:$androidx_test_version"
    testImplementation "androidx.test:rules:$androidx_test_version"
    testImplementation "androidx.test.ext:junit:$androidx_junit_version"
    testImplementation "androidx.test.espresso:espresso-core:$espresso_version"
    testImplementation "androidx.test.espresso:espresso-idling-resource:$espresso_version"
    testImplementation "androidx.room:room-testing:$room_version"
    testImplementation 'com.nhaarman.mockitokotlin2:mockito-kotlin:2.2.0'
    testImplementation 'org.mockito:mockito-inline:3.10.0'
    testImplementation 'org.robolectric:robolectric:4.4'
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:$coroutines_version"

    androidTestImplementation "androidx.test:core:$androidx_test_version"
    androidTestImplementation "androidx.test:rules:$androidx_test_version"
    androidTestImplementation "androidx.test:runner:$androidx_test_version"
    androidTestImplementation "androidx.test.ext:junit:$androidx_junit_version"
    androidTestImplementation "androidx.test.espresso:espresso-core:$espresso_version"
    androidTestImplementation "androidx.test.espresso:espresso-idling-resource:$espresso_version"
    androidTestImplementation "com.squareup.okhttp3:mockwebserver:$okhttp_version"

    debugImplementation "androidx.fragment:fragment-testing:1.3.4"

    androidTestUtil 'androidx.test:orchestrator:1.3.0'
}
